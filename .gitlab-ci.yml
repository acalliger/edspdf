image: harbor.eds.aphp.fr/public/python:3.8-slim

stages:
  - test
  - pages
  - package

Linting:
  stage: test
  cache:
    - key:
        files:
          - .pre-commit-config.yaml
      paths:
        - ~/.pre-commit
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends git
    - pip install pre-commit
  script:
    - pre-commit run --all-files
  only:
    refs:
      - master
      - merge_request

Running Pytest:
  stage: test
  cache:
    - key:
        files:
          - poetry.lock
      paths:
        - .venv
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends poppler-utils
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install
  script:
    - poetry run pytest tests --cov edspdf --junitxml=report.xml
  after_script:
    - poetry run coverage xml -o coverage.xml
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
  artifacts:
    when: always
    paths:
      - coverage.xml
      - report.xml
    reports:
      junit: report.xml
      cobertura: coverage.xml
  only:
    refs:
      - master
      - merge_request
    changes:
      - tests/**
      - edspdf/**
      - .gitlab-ci.yml

Installation:
  stage: test
  script:
    - pip install .
  only:
    refs:
      - master
      - merge_request
    changes:
      - pyproject.toml
      - edspdf/**

Test documentation:
  stage: test
  cache:
    - key:
        files:
          - poetry.lock
      paths:
        - .venv
  before_script:
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install
  script:
    - poetry run mkdocs build --site-dir documentation
  artifacts:
    paths:
      - documentation
  only:
    refs:
      - merge_request
    changes:
      - docs/**
      - mkdocs.yml

pages:
  stage: pages
  cache:
    - key:
        files:
          - poetry.lock
      paths:
        - .venv
  before_script:
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install
  script:
    - poetry run mkdocs build --site-dir public
  artifacts:
    paths:
      - public
  only:
    - master

Package:
  stage: package
  before_script:
    - pip install poetry
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
    - poetry config http-basic.gitlab gitlab-ci-token ${CI_JOB_TOKEN}
  script:
    - poetry publish --build -r gitlab
  only:
    - tags
